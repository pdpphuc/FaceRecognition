#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Jul 15, 2021 11:12:12 PM +07  platform: Windows NT

import sys

from tkinter import filedialog as fd
from PIL import Image, ImageTk
from face_recognition import *
from real_time_detection import *

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import face_recognition_gui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    root.state('zoomed') 
    root.iconbitmap('2182253.ico')
    top = window (root)
    face_recognition_gui_support.init(root, top)
    root.mainloop()

w = None
def create_window(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_window(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = window (w)
    face_recognition_gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_window():
    global w
    w.destroy()
    w = None

class window:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("646x415+356+157")
        top.minsize(120, 1)
        top.maxsize(1540, 845)
        top.resizable(1,  1)
        top.title("Nhận dạng khuôn mặt")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.screen = tk.Canvas(top)
        self.screen.place(relx=0.0, rely=0.0, relheight=0.742, relwidth=1.005)
        self.screen.configure(background="#80ff00")
        self.screen.configure(borderwidth="2")
        self.screen.configure(highlightbackground="#d9d9d9")
        self.screen.configure(highlightcolor="black")
        self.screen.configure(insertbackground="black")
        self.screen.configure(relief="ridge")
        self.screen.configure(selectbackground="blue")
        self.screen.configure(selectforeground="white")

        self.btOpenFile = tk.Button(top)
        self.btOpenFile.place(relx=0.139, rely=0.843, height=24, width=77)
        self.btOpenFile.configure(activebackground="#ececec")
        self.btOpenFile.configure(activeforeground="#000000")
        self.btOpenFile.configure(background="#808080")
        self.btOpenFile.configure(disabledforeground="#a3a3a3")
        self.btOpenFile.configure(foreground="#000000")
        self.btOpenFile.configure(highlightbackground="#d9d9d9")
        self.btOpenFile.configure(highlightcolor="black")
        self.btOpenFile.configure(pady="0")
        self.btOpenFile.configure(text='''Chọn ảnh...''')
        self.btOpenFile.configure(command=self.open_image_file)

        self.btRecognize = tk.Button(top)
        self.btRecognize.place(relx=0.263, rely=0.843, height=24, width=77)
        self.btRecognize.configure(activebackground="#ececec")
        self.btRecognize.configure(activeforeground="#000000")
        self.btRecognize.configure(background="#c0c0c0")
        self.btRecognize.configure(disabledforeground="#a3a3a3")
        self.btRecognize.configure(foreground="#000000")
        self.btRecognize.configure(highlightbackground="#d9d9d9")
        self.btRecognize.configure(highlightcolor="black")
        self.btRecognize.configure(pady="0")
        self.btRecognize.configure(text='''Nhận dạng''')
        self.btRecognize.configure(state='disabled')
        self.btRecognize.configure(command=self.recognize)

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.015, rely=0.771, height=19, width=69)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Đường dẫn:''')

        self.lbFilePath = tk.Label(top)
        self.lbFilePath.place(relx=0.139, rely=0.771, height=21, width=534)
        self.lbFilePath.configure(activebackground="#f9f9f9")
        self.lbFilePath.configure(activeforeground="black")
        self.lbFilePath.configure(background="#0080ff")
        self.lbFilePath.configure(disabledforeground="#a3a3a3")
        self.lbFilePath.configure(foreground="#000000")
        self.lbFilePath.configure(highlightbackground="#d9d9d9")
        self.lbFilePath.configure(highlightcolor="black")

        self.btCaptureVideo = tk.Button(top)
        self.btCaptureVideo.place(relx=0.139, rely=0.916, height=24, width=77)
        self.btCaptureVideo.configure(activebackground="#ececec")
        self.btCaptureVideo.configure(activeforeground="#000000")
        self.btCaptureVideo.configure(background="#d9d9d9")
        self.btCaptureVideo.configure(disabledforeground="#a3a3a3")
        self.btCaptureVideo.configure(foreground="#000000")
        self.btCaptureVideo.configure(highlightbackground="#d9d9d9")
        self.btCaptureVideo.configure(highlightcolor="black")
        self.btCaptureVideo.configure(pady="0")
        self.btCaptureVideo.configure(text='''Quay video''')
        self.btCaptureVideo.configure(command=self.capture_video)

        self.file_path = ''

    # Chọn ảnh
    def open_image_file(self):
        filetypes = (
            ('Image files', '*.png'),
            ('Image files', '*.jpg'),
            ('Image files', '*.webp'),
            ('Image files', '*.jpeg'),
            ('All files', '*.*')
        )
        self.file_path = fd.askopenfilename(
            title='Chọn ảnh',
            filetypes=filetypes)

        if self.file_path != '':
            self.btRecognize.configure(state='normal')
            self.lbFilePath.configure(text=self.file_path)
            self.img = ImageTk.PhotoImage(Image.open(self.file_path))
            self.screen.create_image(0, 0, anchor=tk.NW, image=self.img)

    # Nhận dạng khuôn mặt
    def recognize(self):
        FaceRecogniton(self.file_path)

    # Quay video
    def capture_video(self):
        RealTimeDetection()

if __name__ == '__main__':
    vp_start_gui()





